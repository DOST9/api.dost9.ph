<?php
namespace api\modules\sms\models;

use Yii;
use \yii\db\ActiveRecord;
use \yii\db\Expression;
use \yii\behaviors\TimestampBehavior;

use yii\helpers\Html;
use yii\helpers\Url;
/**
 * This is the model class for table "lab".
 *
 * @property integer $id
 * @property integer $region_id
 * @property string $name
 * @property string $code
 */
//class Lab extends \yii\db\ActiveRecord
class Message extends ActiveRecord
{
    //const SCENARIO_CREATE = 'create';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'message';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            //[['hash', 'sender', 'recipient', 'status', 'title', 'message', 'via', 'created_at', 'module', 'action'], 'required'],
            [['recipient', 'title', 'message'], 'required'],
            [['status'], 'integer'],
            [['message'], 'string'],
            [['created_at'], 'safe'],
            [['hash'], 'string', 'max' => 32],
            [['title'], 'string', 'max' => 200],
            [['via', 'module', 'action'], 'string', 'max' => 100],
        ];
    }

    /*public function scenarios()
    {
            $scenarios = parent::scenarios();
            $scenarios['create'] = ['recipient','title','message']; 
            return $scenarios; 
    }*/

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'message_id' => 'Message ID',
            'hash' => 'Hash',
            'sender' => 'Sender',
            'recipient' => 'Recipient',
            'status' => 'Status',
            'title' => 'Title',
            'message' => 'Message',
            'via' => 'Via',
            'created_at' => 'Created At',
            'module' => 'Module',
            'action' => 'Action',
        ];
    }

    public function behaviors()
    {
        return [
            'timestamp' => [
                'class' => TimestampBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => 'created_at',
                ],
                'value' => new Expression('NOW()'),
                /*'value' => function() { 
                    return date('U'); // unix timestamp 
                },*/
            ]
        ];
    }
    
    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {

            try{
                $folder     = 'D:/sms/outgoing/';
                //$folder     = '/var/spool/sms/outgoing/';

                $recipients = explode(',', $this->recipient);

                for($i=0; $i<count($recipients); $i++)
                {
                    $filename   = tempnam("","");

                    $myfile = fopen($filename, "wb") or die("Unable to open file!");

                    $sms_recipient = 'To: '.$recipients[$i].PHP_EOL.PHP_EOL;
                    $via = 'This SMS notification was was generated by: '.$this->via.PHP_EOL.PHP_EOL;
                    
                    /*
                    'hash' => hash('TEST'), 
                    'sender' => 'Aris', 
                    'recipient' => '639177975944', 
                    'status' => NULL, 
                    'title' => 'complete post', 
                    'message' => 'testing for complete posting', 
                    'via' => 'FAIMS', 
                    'module' => $this->module->id, 
                    'action' => $this->action->id
                    */

                    fwrite($myfile, $sms_recipient);

                    fwrite($myfile, 'Title: '.$this->title.PHP_EOL.PHP_EOL.$this->message.PHP_EOL.PHP_EOL);
                    fwrite($myfile, $via);
                    fclose($myfile);
                    
                    copy($filename, $folder.basename($filename));
                    unlink($filename);

                    
                }

            } catch (Exception $e) {

            }

            return true;

        } else {
            return false;
        }
    }
}